============================
 Doctest for 7-base_geometry
============================

Test if the module has docstring
================================


::
        >>> m = __import__("7-base_geometry").__doc__
        >>> len(m) > 0
        True

Test if the Class MyList has docstring
==============================================


::

        >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
        >>> len(c) > 0
        True

Test if the function area has docstring
=======================================


::

        >>> f = __import__("7-base_geometry").BaseGeometry.area.__doc__
        >>> len(f) > 0
        True


Test if the function integer_validator has docstring
====================================================


::

        >>> f = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
        >>> len(f) > 0
        True



Import the class BaseGeometry
=================================


::

        >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry



Test area function:
=========================


::
        >>> bg = BaseGeometry()
	>>> bg.area()
        Traceback (most recent call last):
                ...
        Exception: area() is not implemented



Test is_integer function:
=========================


::
        >>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", "John")
        Traceback (most recent call last):
                ...
        TypeError: my_int must be an integer


::
        >>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 0)
        Traceback (most recent call last):
                ...
        ValueError: my_int must be greater than 0


::
        >>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", -5220)
        Traceback (most recent call last):
                ...
        ValueError: my_int must be greater than 0
